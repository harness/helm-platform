---
# Source: harness-manager/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: harness-manager
  namespace: default
spec:
  minAvailable: "50%"
  selector:
   matchLabels:
    app: harness-manager
---
# Source: harness-manager/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: harness-default
  namespace: default
  annotations: {}
---
# Source: harness-manager/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: harness-manager-config
  namespace: default
  annotations: {}
data:
  GITOPS_SERVICE_CLIENT_BASEURL: http://gitops:7908/api/v1/
  ALLOWED_ORIGINS: ''
  API_URL: ''
  DELEGATE_METADATA_URL: '/storage/wingsdelegates/delegateprod.txt'
  UI_SERVER_URL: ''
  WATCHER_METADATA_URL: '/storage/wingswatchers/watcherprod.txt'
  LOG_STREAMING_SERVICE_BASEURL: 'http://log-service.default.svc.cluster.local:8079/'
  LOG_STREAMING_SERVICE_EXTERNAL_URL: '/gateway/log-service/'
  ATMOSPHERE_BACKEND: REDIS
  BACKGROUND_SCHEDULER_CLUSTERED: "true"
  CACHE_BACKEND: REDIS
  CAPSULE_JAR: rest-capsule.jar
  DELEGATE_DOCKER_IMAGE: docker.io/harness/delegate:latest
  IMMUTABLE_DELEGATE_ENABLED: 'true'
  IMMUTABLE_DELEGATE_DOCKER_IMAGE: docker.io/harness/delegate:23.05.78924
  UPGRADER_DOCKER_IMAGE: docker.io/harness/upgrader:latest
  DELEGATE_SERVICE_TARGET: harness-manager:9879
  DELEGATE_SERVICE_AUTHORITY: harness-manager:9879
  DISTRIBUTED_LOCK_IMPLEMENTATION: REDIS
  DEPLOY_MODE: KUBERNETES_ONPREM
  DISABLE_NEW_RELIC: "true"
  ENABLE_G1GC: "true"
  EXTERNAL_GRAPHQL_RATE_LIMIT: '500'
  FEATURES: "LDAP_SSO_PROVIDER,ASYNC_ARTIFACT_COLLECTION,JIRA_INTEGRATION,AUDIT_TRAIL_UI,GDS_TIME_SERIES_SAVE_PER_MINUTE,STACKDRIVER_SERVICEGUARD,BATCH_SECRET_DECRYPTION,TIME_SERIES_SERVICEGUARD_V2,TIME_SERIES_WORKFLOW_V2,CUSTOM_DASHBOARD,GRAPHQL,CV_FEEDBACKS,LOGS_V2_247,UPGRADE_JRE,LOG_STREAMING_INTEGRATION,NG_HARNESS_APPROVAL,GIT_SYNC_NG,NG_SHOW_DELEGATE,NG_CG_TASK_ASSIGNMENT_ISOLATION,CI_OVERVIEW_PAGE,AZURE_CLOUD_PROVIDER_VALIDATION_ON_DELEGATE,TERRAFORM_AWS_CP_AUTHENTICATION,NG_TEMPLATES,NEW_DEPLOYMENT_FREEZE,HELM_CHART_AS_ARTIFACT,RESOLVE_DEPLOYMENT_TAGS_BEFORE_EXECUTION,WEBHOOK_TRIGGER_AUTHORIZATION,GITHUB_WEBHOOK_AUTHENTICATION,CUSTOM_MANIFEST,GIT_ACCOUNT_SUPPORT,AZURE_WEBAPP,LDAP_GROUP_SYNC_JOB_ITERATOR,POLLING_INTERVAL_CONFIGURABLE,APPLICATION_DROPDOWN_MULTISELECT,USER_GROUP_AS_EXPRESSION,RESOURCE_CONSTRAINT_SCOPE_PIPELINE_ENABLED,NG_TEMPLATE_GITX,ELK_HEALTH_SOURCE,NG_ENABLE_LDAP_CHECK,CVNG_METRIC_THRESHOLD,SRM_HOST_SAMPLING_ENABLE,SRM_ENABLE_HEALTHSOURCE_CLOUDWATCH_METRICS,NG_SETTINGS,USE_OLD_GIT_SYNC,ENABLE_DEFAULT_NG_EXPERIENCE_FOR_ONPREM,NEXT_GEN_ENABLED,NEW_LEFT_NAVBAR_SETTINGS,SPG_SIDENAV_COLLAPSE"
  HAZELCAST_NAMESPACE: 'default'
  HAZELCAST_SERVICE: harness-manager
  HZ_CLUSTER_NAME: harness-manager
  LOGGING_LEVEL: 'INFO'
  MEMORY: "2048"
  REDIS_SENTINEL: "true"
  REDIS_URL: 'redis://localhost:6379'
  REDIS_MASTER_NAME: 'harness-redis'
  REDIS_SENTINELS: 'redis://redis-sentinel-harness-announce-0.default:26379,redis://redis-sentinel-harness-announce-1.default:26379,redis://redis-sentinel-harness-announce-2.default:26379'
  SERVER_PORT: "9090"
  SERVICE_ACC: /opt/harness/svc/service_acc.json
  VERSION: 1.0.76019
  LOG_STREAMING_SERVICE_TOKEN: c76e567a-b341-404d-a8dd-d9738714eb82
  STACK_DRIVER_LOGGING_ENABLED: "false"
  EVENTS_FRAMEWORK_REDIS_SENTINELS: redis://redis-sentinel-harness-announce-0:26379,redis://redis-sentinel-harness-announce-1:26379,redis://redis-sentinel-harness-announce-2:26379
  EVENTS_FRAMEWORK_SENTINEL_MASTER_NAME: 'harness-redis'
  EVENTS_FRAMEWORK_USE_SENTINEL: "true"
  EVENTS_FRAMEWORK_REDIS_URL: redis://redis-sentinel-harness-announce-0:26379,redis://redis-sentinel-harness-announce-1:26379,redis://redis-sentinel-harness-announce-2:26379
  EVENTS_FRAMEWORK_AVAILABLE_IN_ONPREM: "true"
  HARNESS_ENABLE_NG_AUTH_UI_PLACEHOLDER: "true"
  VERIFICATION_SERVICE_SECRET: 59MR5RlVARcdH7zb7pNx6GzqiglBmXR8
  ENABLE_ITERATORS: 'true'
  ITERATOR_CONFIG_PATH: '/opt/harness/config'
  LICENSE_INFO: ''
  NG_MANAGER_BASE_URL: 'http://ng-manager:7090/'
  ACCESS_CONTROL_ENABLED: "true"
  ACCESS_CONTROL_BASE_URL: 'http://access-control:9006/api/'
  ENABLE_AUDIT: 'true'
  AUDIT_CLIENT_BASEURL: 'http://platform-service:9005/api/'
  ENABLE_PROMETHEUS_COLLECTOR: "false"
  PROMETHEUS_COLLECTOR_PORT: "8889"
---
# Source: harness-manager/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: iterator-config
data:
  iterator_config.json: |
    [
      {
        "name": "AlertReconciliation",
        "enabled": true,
        "threadPoolSize": 3,
        "threadPoolIntervalInSeconds": 60,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 600,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "ArtifactCollection",
        "enabled": true,
        "threadPoolSize": 20,
        "threadPoolIntervalInSeconds": 10,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 60,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "ArtifactCleanup",
        "enabled": true,
        "threadPoolSize": 5,
        "threadPoolIntervalInSeconds": 300,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 7200,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "EventDelivery",
        "enabled": true,
        "threadPoolSize": 25,
        "threadPoolIntervalInSeconds": 60,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 5,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "InstanceSync",
        "enabled": true,
        "threadPoolSize": 10,
        "threadPoolIntervalInSeconds": 30,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 600,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "LicenseExpiryCheck",
        "enabled": true,
        "threadPoolSize": 2,
        "threadPoolIntervalInSeconds": 30,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 3600,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "ApprovalPolling",
        "enabled": true,
        "threadPoolSize": 5,
        "threadPoolIntervalInSeconds": 10,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 60,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "GCPBilling",
        "enabled": true,
        "threadPoolSize": 2,
        "threadPoolIntervalInSeconds": 1800,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 3600,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "SegmentGroupEventJob",
        "enabled": true,
        "threadPoolSize": 2,
        "threadPoolIntervalInSeconds": 1800,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 86400,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "BarrierInstanceMonitor",
        "enabled": true,
        "threadPoolSize": 2,
        "threadPoolIntervalInSeconds": 60,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 60,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "EntityAuditRecordProcessor",
        "enabled": true,
        "threadPoolSize": 2,
        "threadPoolIntervalInSeconds": 30,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 1800,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "UsageMetricsHandler",
        "enabled": true,
        "threadPoolSize": 2,
        "threadPoolIntervalInSeconds": 30,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 86400,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "ResourceConstraint-Backup",
        "enabled": true,
        "threadPoolSize": 10,
        "threadPoolIntervalInSeconds": 60,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 30,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "WorkflowExecutionMonitor",
        "enabled": true,
        "threadPoolSize": 5,
        "threadPoolIntervalInSeconds": 10,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 60,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "SettingAttributeValidateConnectivity",
        "enabled": true,
        "threadPoolSize": 5,
        "threadPoolIntervalInSeconds": 600,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 10800,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "VaultSecretManagerRenewalHandler",
        "enabled": true,
        "threadPoolSize": 5,
        "threadPoolIntervalInSeconds": 5,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 31,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "SettingAttributesSecretsMigrationHandler",
        "enabled": true,
        "threadPoolSize": 2,
        "threadPoolIntervalInSeconds": 30,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 1800,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "GitSyncEntityExpiryCheck",
        "enabled": true,
        "threadPoolSize": 2,
        "threadPoolIntervalInSeconds": 600,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 43200,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "ExportExecutionsRequestHandler",
        "enabled": true,
        "threadPoolSize": 3,
        "threadPoolIntervalInSeconds": 60,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 1800,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "ExportExecutionsRequestCleanupHandler",
        "enabled": true,
        "threadPoolSize": 2,
        "threadPoolIntervalInSeconds": 3600,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 2700,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "DeploymentFreezeActivities",
        "enabled": true,
        "threadPoolSize": 3,
        "threadPoolIntervalInSeconds": 0,
        "nextIterationMode": "THROTTLE",
        "targetIntervalInSeconds": 0,
        "throttleIntervalInSeconds": 45
      },
      {
        "name": "DeploymentFreezeDeactivation",
        "enabled": true,
        "threadPoolSize": 3,
        "threadPoolIntervalInSeconds": 0,
        "nextIterationMode": "THROTTLE",
        "targetIntervalInSeconds": 0,
        "throttleIntervalInSeconds": 45
      },
      {
        "name": "CeLicenceExpiryProcessor",
        "enabled": true,
        "threadPoolSize": 2,
        "threadPoolIntervalInSeconds": 86400,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 86400,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "DeleteAccountIterator",
        "enabled": false,
        "threadPoolSize": 2,
        "threadPoolIntervalInSeconds": 60,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 18000,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "DeletedEntityIterator",
        "enabled": false,
        "threadPoolSize": 2,
        "threadPoolIntervalInSeconds": 60,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 43200,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "ResourceLookupTagLinkSync",
        "enabled": true,
        "threadPoolSize": 1,
        "threadPoolIntervalInSeconds": 43200,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 43200,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "AccessRequestHandler",
        "enabled": true,
        "threadPoolSize": 2,
        "threadPoolIntervalInSeconds": 5,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 15,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "ScheduledTrigger",
        "enabled": true,
        "threadPoolSize": 8,
        "threadPoolIntervalInSeconds": 0,
        "nextIterationMode": "THROTTLE",
        "targetIntervalInSeconds": 0,
        "throttleIntervalInSeconds": 45
      },
      {
        "name": "LdapGroupScheduled",
        "enabled": true,
        "threadPoolSize": 8,
        "threadPoolIntervalInSeconds": 0,
        "nextIterationMode": "THROTTLE",
        "targetIntervalInSeconds": 0,
        "throttleIntervalInSeconds": 45
      },
      {
        "name": "EncryptedDataLocalToGcpKmsMigrationHandler",
        "enabled": true,
        "threadPoolSize": 5,
        "threadPoolIntervalInSeconds": 30,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 72000,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "TimeoutEngine",
        "enabled": true,
        "threadPoolSize": 5,
        "threadPoolIntervalInSeconds": 10,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 10,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "GitSyncPollingIterator",
        "enabled": true,
        "threadPoolSize": 2,
        "threadPoolIntervalInSeconds": 60,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 300,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "PerpetualTaskAssignment",
        "enabled": true,
        "threadPoolSize": 5,
        "threadPoolIntervalInSeconds": 60,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 60,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "DelegateDisconnectDetector",
        "enabled": true,
        "threadPoolSize": 2,
        "threadPoolIntervalInSeconds": 60,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 60,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "DelegateTaskFail",
        "enabled": true,
        "threadPoolSize": 2,
        "threadPoolIntervalInSeconds": 30,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 30,
        "throttleIntervalInSeconds": 0
      },
      {
        "name": "DelegateTelemetryPublisherIteration",
        "enabled": true,
        "threadPoolSize": 1,
        "threadPoolIntervalInSeconds": 600,
        "nextIterationMode": "TARGET",
        "targetIntervalInSeconds": 86400,
        "throttleIntervalInSeconds": 0
      }
    ]
---
# Source: harness-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: harness-manager-role
  namespace: default
  annotations: {}
rules:
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
  - apiGroups: [""]
    resources: ["pods"]
    verbs:
      - get
      - list
      - watch
---
# Source: harness-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: harness-manager-role-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: harness-manager-role
subjects:
  - kind: ServiceAccount
    name: harness-default
    namespace: default
---
# Source: harness-manager/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    helm.sh/chart: harness-manager-0.4.3
    app.kubernetes.io/name: harness-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
  name: harness-manager
  namespace: default
  annotations: {}
spec:
  ports:
    - name: http-manager
      port: 9090
      protocol: TCP
      targetPort: 9090
    - name: grpc-manager
      port: 9879
      protocol: TCP
      targetPort: 9879
  selector:
    app.kubernetes.io/name: harness-manager
    app.kubernetes.io/instance: release-name
  sessionAffinity: None
  type: ClusterIP
---
# Source: harness-manager/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: harness-manager
  namespace: default
  labels:
    helm.sh/chart: harness-manager-0.4.3
    app.kubernetes.io/name: harness-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
  annotations: {}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: harness-manager
      app.kubernetes.io/instance: release-name
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        
        rollme: "T5piS"
      labels:
        app: harness-manager
        app.kubernetes.io/name: harness-manager
        app.kubernetes.io/instance: release-name
    spec:
      
      serviceAccountName: harness-default
      securityContext:
        {}
      initContainers:
      - name: wait-for-mongo
        image: docker.io/harness/helm-init-container:latest
        imagePullPolicy: IfNotPresent
        args:
          - "pod"
          - "-lapp=mongodb-replicaset"
      - name: wait-for-timescale
        image: docker.io/harness/helm-init-container:latest
        imagePullPolicy: IfNotPresent
        args:
          - "pod"
          - "-lapp=timescaledb-single-chart"
      - name: wait-for-redis
        image: docker.io/harness/helm-init-container:latest
        imagePullPolicy: IfNotPresent
        args:
          - "pod"
          - "-lapp=redis-sentinel"
      containers:
        - envFrom:
            - configMapRef:
                name: harness-manager-config
          env:                        
            - name: MONGO_USER
              valueFrom:
                secretKeyRef:
                  name: harness-secrets
                  key: mongodbUsername
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-replicaset-chart
                  key: mongodb-root-password
            - name : TIMESCALEDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: harness-secrets
                  key: timescaledbPostgresPassword
            - name: TIMESCALEDB_USERNAME
              value: postgres
            - name: MONGO_URI
              value: 'mongodb://$(MONGO_USER):$(MONGO_PASSWORD)@mongodb-replicaset-chart-0.mongodb-replicaset-chart.default.svc/harness?authSource=admin'
            - name: DMS_MONGO_URI
              value: 'mongodb://$(MONGO_USER):$(MONGO_PASSWORD)@mongodb-replicaset-chart-0.mongodb-replicaset-chart.default.svc/dms-harness?authSource=admin'
            - name: TIMESCALEDB_URI
              value: 'jdbc:postgresql://timescaledb-single-chart.default:5432/harness'
          image: docker.io/harness/manager-signed:77126
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
          lifecycle:
            preStop:
              exec:
                command:
                - touch
                - shutdown
          
          livenessProbe:
            failureThreshold: 20
            initialDelaySeconds: 180
            httpGet:
              path: /api/version
              port: 9090
              scheme: HTTP
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
            
            - containerPort: 9879
              protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /api/health
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 90
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
            - name: dynamic-iterator-config
              mountPath: /opt/harness/config
          resources:
            limits:
              memory: 24Gi
            requests:
              cpu: "5"
          
      volumes:
        - name: dynamic-iterator-config
          configMap:
            name: iterator-config
            defaultMode: 420
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - harness-manager
            topologyKey: "kubernetes.io/hostname"
