apiVersion: apps/v1
kind: Deployment
metadata:
  name: next-gen-ui
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "next-gen-ui.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{.Values.maxSurge}}
      maxUnavailable: {{.Values.maxUnavailable}}
  selector:
    matchLabels:
      {{- include "next-gen-ui.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "next-gen-ui.selectorLabels" . | nindent 8 }}
    spec:
      {{ include "next-gen-ui.pullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "next-gen-ui.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: 30
      initContainers:
      - name: wait-for-change-data-capture
        image: {{ include "common.images.image" (dict "imageRoot" .Values.waitForInitContainer.image "global" .Values.global) }}
        imagePullPolicy: IfNotPresent
        args:
          - "pod"
          - "-lapp=change-data-capture"
      containers:
      - name: next-gen-ui
        image: {{ include "common.images.image" (dict "imageRoot" .Values.image "global" .Values.global) }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        {{- toYaml .Values.probes | nindent 8}}
        ports:
        - name: ng-ui-port
          containerPort: {{ .Values.service.targetport }}
          protocol: "TCP"
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        envFrom:
        - configMapRef:
            name: next-gen-ui
        {{- if .Values.lifecycleHooks }}
        lifecycle: {{- include "harnesscommon.tplvalues.render" (dict "value" .Values.lifecycleHooks "context" $) | nindent 12 }}
        {{- end }}
        volumeMounts:
        {{- if .Values.extraVolumeMounts }}
        {{- include "harnesscommon.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
        {{- end }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - next-gen-ui
            topologyKey: "kubernetes.io/hostname"
      {{- with .Values.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.extraVolumes }}
      volumes:
      {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.extraVolumes "context" $ ) | nindent 8 }}
      {{- end }}
